#define WHITE 1
#define BLACK 0

int line_color=BLACK;
int bridge=0;
int time=1;
int left_value=0;// for left line remember
int right_value=0;// for right line remember
int trigpin_frd=A1;
int echopin_frd=A0;//for obstragol detect
int trigpin_lft=A4;
int echopin_lft=A3;//for left sonar
int trigpin_rght=A6;
int echopin_rght=A5;//for right sonar
float duration_rght,length_rght,cm_rght;//variable for right sonar
float duration_lft,length_lft,cm_lft;//variable for left sonar
float duration_frd,length_frd,cm_frd;
int n1=2,n2=4,n3=6,n4=7,e1=3,e2=5;    //for motor driver
int ss1=0,ss2=0,ss3=0,ss4=0,ss5=0,ss6=0,ss7=0;// this is sample variable
int S1,S2,S3,S4,S5,S6,S7;     //final sensor name
int sen1=37,sen2=35,sen3=33,sen4=31,sen5=29,sen6=27,sen7=25;//sensor input pin

#define A digitalRead(sen1)
#define B digitalRead(sen2)
#define C digitalRead(sen3)
#define D digitalRead(sen4)
#define E digitalRead(sen5)
#define F digitalRead(sen6)
#define G digitalRead(sen7)

#define BUZ_HI digitalWrite(41,HIGH)
#define BUZ_LOW digitalWrite(41,LOW)
#define RED_HI digitalWrite(47,HIGH)
#define RED_LOW digitalWrite(47,LOW)
#define YELLOW_HI digitalWrite(45,HIGH)
#define YELLOW_LOW digitalWrite(45,LOW)
#define BLUE_HI digitalWrite(43,HIGH)
#define BLUE_LOW digitalWrite(43,LOW)



#define lb_pressed digitalRead(53)==HIGH
#define mb_pressed digitalRead(51)==HIGH
#define rb_pressed digitalRead(49)==HIGH

float right_sonar_read();
float left_sonar_read();
float forward_sonar_read();

void cave_follow();

void normal_line();
void left_move();
void right_move();
void robot_stop();
void back_turn();
void read_sensor();

void setup()
{ 
//  Serial.begin (115200);
  pinMode(trigpin_lft, OUTPUT);
  pinMode(echopin_lft, INPUT);//for left sonar
  pinMode(trigpin_rght, OUTPUT);
  pinMode(echopin_rght, INPUT);//for right sonar
  
  pinMode(trigpin_frd, OUTPUT);
  pinMode(echopin_frd, INPUT);//for forward sonar
  
  pinMode(41,OUTPUT);//for indicators
  pinMode(43,OUTPUT);
  pinMode(45,OUTPUT); 
  pinMode(47,OUTPUT); 
  
  pinMode(n1,OUTPUT);//as output for 293D
  pinMode(n2,OUTPUT);
  pinMode(n3,OUTPUT);
  pinMode(n4,OUTPUT);
  pinMode(e1,OUTPUT);
  pinMode(e2,OUTPUT);
  //////////////////////////////////
  pinMode(53,INPUT); //for button
  pinMode(51,INPUT);
  pinMode(49,INPUT);
 /////////////////////////////////// 
  pinMode(sen1,INPUT); //as input
  pinMode(sen2,INPUT);
  pinMode(sen3,INPUT);
  pinMode(sen4,INPUT);
  pinMode(sen5,INPUT);
  pinMode(sen6,INPUT);
  pinMode(sen7,INPUT);
//  int setup_com=1;
  

   while(mb_pressed!=1)
  {
    delay(10);
  }
  BUZ_HI;
  delay(250);
  BUZ_LOW;
  RED_HI;
  delay(250);
  RED_LOW;
  YELLOW_HI;
  delay(250);
  YELLOW_LOW;
  BLUE_HI;
  delay(250);
  BLUE_LOW;
  delay(10);
}

  void loop()
  {
      read_sensor();
  //  YELLOW_LOW;
    //////////////////////////////////////////////////////////////////////////////////////
    
    
     if((S1+S2+S3+S4+S5+S6+S7)==0)//may cave
    {
        bot(200,200);
        delay(60);                 //to remove line break
        read_sensor();
        if((S1+S2+S3+S4+S5+S6+S7)==0)
        {
            bot(200,200);//run and check the cave
            length_lft=left_sonar_read();
        
            if(length_lft!=0 && length_lft<=25)//cave found
           {
               length_lft=left_sonar_read();// again check cave
               if(length_lft!=0 && length_lft<=25)//cave found
               {
                   cave_follow();
               }
               else
               {
                   normal_line();
               }     
           }
           else
           {
               normal_line();
           }
        }
       else
       {
           normal_line();
       }
    }// CAVE FUNCTION CLOSE
  //////////////////////////////////////////////////////////////////////////////////////////////////  
    else if((S1+S2+S3+S4+S5+S6+S7)==7)
    {
      bot(220,220);
      delay(120);
      read_sensor();
      if((S1+S2+S3+S4+S5+S6+S7)==7)
      {
        bridge=1;
        while(bridge==1)
        {
          read_sensor();
          if((S1+S2  +  S6+S7)>=1)
          {
            while((S1+S2  +  S6+S7)>=1)
            {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }  
            }
          }//IF CLOSE
          else
          {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }
          }// end of else
        }
        
      }
      else
      {
        normal_line();
      }
    }
    
    //////////////////////////////////////////////////////////////////////////////
    else if(((S1+S2)>=1)&&(S4==1))
    {
      bot(220,220);
      delay(120);// go small forward to check the condition
      read_sensor();
      if(((S1+S2+S3+S4+S5+S6+S7)>=6) || (S1==1 || S2==1 || S6==1 || S7==1))// bridge found
      {
        bridge=1;
        while(bridge==1)
        {
          read_sensor();
          if((S1+S2  +  S6+S7)>=1)
          {
            while((S1+S2  +  S6+S7)>=1)
            {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
               // S1+S2  +  S6+S7=0;
                bridge=0;
                RED_HI;
              }  
            }
          }//IF CLOSE
          else
          {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }
          }
        }
      }
      else
      {
        left_value=1;
        
        while(left_value==1)
        {
            read_sensor();
            
            if((S1+S2+S3+S4+S5+S6+S7)==0)
            {
              slow_left_move();
              left_value=0;
            }
            
            else if(((S3+S4+S5)!=0) && ((S3+S4+S5)<=3))
            {
              time=1;
              while(time<=150)
              {
                BUZ_HI;
                read_sensor();
                if(time>=150)
                {
                  BUZ_LOW;
                  left_value=0;
                  time=151;
                }
                else if((S1+S2+S3+S4+S5+S6+S7)==0)
                {
                  BUZ_LOW;
                  slow_left_move();
                  time=151;
                  left_value=0;
                }
                
                bot(180,180);
                delay(1);
                time++;
              }
              
            }
            bot(180,180);
          }  
         // BUZ_LOW;
        }
      }
      
      //////////////////////////////////////////////////////////////////////////////
      else if((S1+S2+S3+S4)>=3)
    {
      bot(220,220);
      delay(120);// go small forward to check the condition
      read_sensor();
      if(((S1+S2+S3+S4+S5+S6+S7)>=6) || (S1==1 || S2==1 || S6==1 || S7==1))// bridge found
      {
        bridge=1;
        while(bridge==1)
        {
          read_sensor();
          if((S1+S2  +  S6+S7)>=1)
          {
            while((S1+S2  +  S6+S7)>=1)
            {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
               // S1+S2  +  S6+S7=0;
                bridge=0;
                RED_HI;
              }  
            }
          }//IF CLOSE
          else
          {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }
          }
        }
      }
      else
      {
        left_value=1;
        
        while(left_value==1)
        {
            read_sensor();
            
            if((S1+S2+S3+S4+S5+S6+S7)==0)
            {
              slow_left_move();
              left_value=0;
            }
            
            else if(((S3+S4+S5)!=0) && ((S3+S4+S5)<=3))
            {
              time=1;
              while(time<=150)
              {
                BUZ_HI;
                read_sensor();
                if(time>=150)
                {
                  BUZ_LOW;
                  left_value=0;
                  time=151;
                }
                else if((S1+S2+S3+S4+S5+S6+S7)==0)
                {
                  BUZ_LOW;
                  slow_left_move();
                  time=151;
                  left_value=0;
                }
                
                bot(180,180);
                delay(1);
                time++;
              }
              
            }
            bot(180,180);
          }  
         // BUZ_LOW;
        }
      }
      
      //////////////////////////////////////////////////////////////////////////////
      else if(S1==1 && S3==1)
    {
      bot(220,220);
      delay(120);// go small forward to check the condition
      read_sensor();
      if(((S1+S2+S3+S4+S5+S6+S7)>=6) || (S1==1 || S2==1 || S6==1 || S7==1))// bridge found
      {
        bridge=1;
        while(bridge==1)
        {
          read_sensor();
          if((S1+S2  +  S6+S7)>=1)
          {
            while((S1+S2  +  S6+S7)>=1)
            {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
               // S1+S2  +  S6+S7=0;
                bridge=0;
                RED_HI;
              }  
            }
          }//IF CLOSE
          else
          {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }
          }
        }
      }
      else
      {
        left_value=1;
        
        while(left_value==1)
        {
            read_sensor();
            
            if((S1+S2+S3+S4+S5+S6+S7)==0)
            {
              slow_left_move();
              left_value=0;
            }
            
            else if(((S3+S4+S5)!=0) && ((S3+S4+S5)<=3))
            {
              time=1;
              while(time<=150)
              {
                BUZ_HI;
                read_sensor();
                if(time>=150)
                {
                  BUZ_LOW;
                  left_value=0;
                  time=151;
                }
                else if((S1+S2+S3+S4+S5+S6+S7)==0)
                {
                  BUZ_LOW;
                  slow_left_move();
                  time=151;
                  left_value=0;
                }
                
                bot(180,180);
                delay(1);
                time++;
              }
              
            }
            bot(180,180);
          }  
         // BUZ_LOW;
        }
      }
      
      //////////////////////////////////////////////////////////////////////////////
    else if(((S6+S7)>=1)&&(S4==1))
    {
      bot(220,220);
      delay(120);
      read_sensor();
      if(((S1+S2+S3+S4+S5+S6+S7)>=6) || (S1==1 || S2==1 || S6==1 || S7==1))
      {
        bridge=1;
        while(bridge==1)
        {
          read_sensor();
          if((S1+S2  +  S6+S7)>=1)
          {
            while((S1+S2  +  S6+S7)>=1)
            {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
               // S1+S2  +  S6+S7=0;
                bridge=0;
                RED_HI;
              }  
            }
          }//IF CLOSE
          else
          {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }
           }
        }
      }
      else
      {
        right_value=1;
        
        while(right_value==1)
        {
            read_sensor();
            
            if((S1+S2+S3+S4+S5+S6+S7)==0)
            {
              slow_right_move();
              right_value=0;
            }
            
            else if(((S3+S4+S5)!=0) && ((S3+S4+S5)<=3))
            {
              time=1;
              while(time<=150)
              {
                BUZ_HI;
                  read_sensor();
                  if(time>=150)
                  {
                    BUZ_LOW;
                    right_value=0;
                    time=151;
                  }
                  else if((S1+S2+S3+S4+S5+S6+S7)==0)
                  {
                    BUZ_LOW;
                      slow_right_move();
                      time=151;
                      right_value=0;
                  }
                  
                  bot(180,180);
                  delay(1);
                  time++;
              }//while loop close  
            }// else if close
            bot(180,180);
          } //"while" close 
        //  BUZ_LOW;
        }//"else" close
      }
      else if((S4+S5+S6+S7)>=3)
    {
      bot(220,220);
      delay(120);
      read_sensor();
      if(((S1+S2+S3+S4+S5+S6+S7)>=6) || (S1==1 || S2==1 || S6==1 || S7==1))
      {
        bridge=1;
        while(bridge==1)
        {
          read_sensor();
          if((S1+S2  +  S6+S7)>=1)
          {
            while((S1+S2  +  S6+S7)>=1)
            {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
               // S1+S2  +  S6+S7=0;
                bridge=0;
                RED_HI;
              }  
            }
          }//IF CLOSE
          else
          {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }
           }
        }
      }
      else
      {
        right_value=1;
        
        while(right_value==1)
        {
            read_sensor();
            
            if((S1+S2+S3+S4+S5+S6+S7)==0)
            {
              slow_right_move();
              right_value=0;
            }
            
            else if(((S3+S4+S5)!=0) && ((S3+S4+S5)<=3))
            {
              time=1;
              while(time<=150)
              {
                BUZ_HI;
                  read_sensor();
                  if(time>=150)
                  {
                    BUZ_LOW;
                    right_value=0;
                    time=151;
                  }
                  else if((S1+S2+S3+S4+S5+S6+S7)==0)
                  {
                    BUZ_LOW;
                      slow_right_move();
                      time=151;
                      right_value=0;
                  }
                  
                  bot(180,180);
                  delay(1);
                  time++;
              }//while loop close  
            }// else if close
            bot(180,180);
          } //"while" close 
        //  BUZ_LOW;
        }//"else" close
      }
      else if(S5==1 && S7==1)
    {
      bot(220,220);
      delay(120);
      read_sensor();
      if(((S1+S2+S3+S4+S5+S6+S7)>=6) || (S1==1 || S2==1 || S6==1 || S7==1))
      {
        bridge=1;
        while(bridge==1)
        {
          read_sensor();
          if((S1+S2  +  S6+S7)>=1)
          {
            while((S1+S2  +  S6+S7)>=1)
            {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
               // S1+S2  +  S6+S7=0;
                bridge=0;
                RED_HI;
              }  
            }
          }//IF CLOSE
          else
          {
              normal_line_bridge();
              if(((S1+S2  +  S6+S7)==0) && (S4==1))
              {
                bot(220,220);
                delay(200);
                bridge=0;
                RED_HI;
              }
           }
        }
      }
      else
      {
        right_value=1;
        
        while(right_value==1)
        {
            read_sensor();
            
            if((S1+S2+S3+S4+S5+S6+S7)==0)
            {
              slow_right_move();
              right_value=0;
            }
            
            else if(((S3+S4+S5)!=0) && ((S3+S4+S5)<=3))
            {
              time=1;
              while(time<=150)
              {
                BUZ_HI;
                  read_sensor();
                  if(time>=150)
                  {
                    BUZ_LOW;
                    right_value=0;
                    time=151;
                  }
                  else if((S1+S2+S3+S4+S5+S6+S7)==0)
                  {
                    BUZ_LOW;
                      slow_right_move();
                      time=151;
                      right_value=0;
                  }
                  
                  bot(180,180);
                  delay(1);
                  time++;
              }//while loop close  
            }// else if close
            bot(180,180);
          } //"while" close 
        //  BUZ_LOW;
        }//"else" close
      }
   
//////////////////////////////////////////////////////////////////////////////////////////
   
//////////////////////////////////////////////////////////////////////////////////////////
  else
  {
    normal_line();
  }   
}
////////////////////////////////////////////////////////////////////////////////////////////


    
    

///////////////////////////////////////////////////////////

void cave_follow()
{
  int cave_pass=0;
 // BUZ_HI;
  bot(-50,-50);
  delay(50);
  bot(0,0);
  delay(100);
  BUZ_HI;
  delay(150);
  BUZ_LOW;
  delay(150);
  BUZ_HI;
  delay(150);
  BUZ_LOW;
 // BUZ_HI;
  bot(80,80);// start to run within the cave
  delay(200);
//  BUZ_LOW;
  
  
   
   while(cave_pass==0)
  {
     length_frd=forward_sonar_read();
    
     if((length_frd!=0) && (length_frd<=15))
     {
       
       bot(-80,-80);
       delay(50);
       bot(0,0);
       delay(50);
       length_frd=forward_sonar_read();
       if((length_frd!=0) && (length_frd<=18))
       {
         length_lft=left_sonar_read();
         length_rght=right_sonar_read();
         if(length_lft==0)//way in left
         {
            bot(-60,180);
            delay(480);
            bot(60,-180);
            delay(20);
            bot(0,0);
            delay(10);
         }
         
         if(length_rght==0)//way in right
         {
            bot(180,-60);
            delay(480);
            bot(-180,60);
            delay(20);
            bot(0,0);
            delay(10);
         }
       }// end of "if"
       else
       {
         length_frd=forward_sonar_read();
         bot(90,90);
       }
       
       
    }
  else if((length_frd==0) || (length_frd>15))
  {
      bot(80,80);
       read_sensor();
       if(((S1+S2+S3+S4+S5+S6+S7)!=0) && ((S1+S2+S3+S4+S5+S6+S7)<=3))//line found
       {
         read_sensor();
         if(((S1+S2+S3+S4+S5+S6+S7)!=0) && ((S1+S2+S3+S4+S5+S6+S7)<=3))
         {
             cave_pass=1;
         }  
       }
      length_rght=right_sonar_read();
      length_lft=left_sonar_read();
    if(length_rght!=0 && length_rght<=5)
    {
      bot(40,100);//to go simple right
    }
    else if(length_rght>5 && length_rght<=7)
    {
      bot(60,100);//to go straight
    }
    else if(length_rght>7 && length_rght<=9)
    {
      bot(110,110);//to go straight
    }
    else if( length_rght>9)
    {
      bot(110,60);//left
    }    
   } 
  }
 bot(0,0);
  BUZ_HI;
  delay(200);
  BUZ_LOW; 
  normal_line();
 }
 /////////////////////////////////////////////////////////////////////////////
///////////////////////



//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
void left_move()
{
  bot(-200,-200);
  delay(40);
  bot(0,0);
  delay(10);
/// BUZ_HI;
 bot(-160,160);  //CCW  CW//hard hard left//turn start
 delay(50);//upto 45 degree
/// BUZ_LOW; 
 S4=0;
 while(S4!=1)
 {
///   YELLOW_HI;
   bot(-140,140);
   read_sensor();
 }
 bot(140,-140);
 delay(70);
/// YELLOW_LOW;
 //read_sensor();
 normal_line();
}
/////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
void right_move()
{
  bot(-200,-200);
  delay(40);
  bot(0,0);
  delay(10);
/// BUZ_HI;
 bot(160,-160);  //CW   CCW//hard hard right//turn start
 delay(50);
/// BUZ_LOW; 
 S4=0;
 while(S4!=1)
 {
   BLUE_HI;
   bot(140,-140);  // CW    CCW//hard hard right
   read_sensor();
 }
 bot(-140,140);
 delay(60);
// BLUE_LOW;
// read_sensor();
normal_line();
}

void slow_left_move()
{
  bot(-200,-200);
  delay(40);
  bot(0,0);
  delay(10);
/// BUZ_HI;
 bot(-120,120);  //CCW  CW//hard hard left//turn start
 delay(50);//upto 45 degree
/// BUZ_LOW; 
 S4=0;
 while(S4!=1)
 {
///   YELLOW_HI;
   bot(-100,100);
   read_sensor();
 }
 bot(100,-100);
 delay(50);
/// YELLOW_LOW;
 //read_sensor();
 normal_line();
}
/////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
void slow_right_move()
{
  bot(-200,-200);
  delay(40);
  bot(0,0);
  delay(10);
/// BUZ_HI;
 bot(120,-120);  //CW   CCW//hard hard right//turn start
 delay(50);
/// BUZ_LOW; 
 S4=0;
 while(S4!=1)
 {
   BLUE_HI;
   bot(100,-100);  // CW    CCW//hard hard right
   read_sensor();
 }
 bot(-100,100);
 delay(50);
// BLUE_LOW;
// read_sensor();
normal_line();
}
//////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////
void normal_line()
{
   //////////////////////////////////////////////////////////////
   read_sensor();
 //  BUZ_LOW;
   ////////////////////////////////////////////////////////////// 
   if(S1==0 && S2==0 && S3==0 && S4==1 && S5==0 && S6==0 && S7==0)
  {			
    bot(180,180);     //CW   CW//STRAIGHT
  }
  
  /////////////////////////////////////////////////////////////////////
  else if(S1==0 && S2==0 && S3==1 && S4==1 && S5==0 && S6==0 && S7==0) 
  {
      bot(100,180);	//CW   CW//lefT	
  }
  else if(S1==0 && S2==0 && S3==0 && S4==1 && S5==1 && S6==0 && S7==0) 
  {
    bot(180,100);	//CW   CW//right
  }
  
 ////////////////////////////////////////////////////////////////////// 
  else if(S1==0 && S2==0 && S3==1 && S4==0 && S5==0 && S6==0 && S7==0)
  {
      bot(40,180);	//CW   CW//lefT
		
  }
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==1 && S6==0 && S7==0)
  {
    bot(180,40);	//CW   CW//right
  }
  
  /////////////////////////////////////////////////////////////////
  else if(S1==0 && S2==1 && S3==1 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(0,180);	//CCW  CW//hard left
  }
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==1 && S6==1 && S7==0) 
  {
    bot(180,0);	 //CW  CCW//hard right
  } 
  /////////////////////////////////////////////////////
  else if(S1==0 && S2==1 && S3==0 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(-60,180);	//CCW  CW//hard left
  } 
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==0 && S6==1 && S7==0)
  {
    bot(180,-60);	 //CW  CCW//hard right
  }
  /////////////////////////////////////////////////////////////
  else if(S1==1 && S2==1 && S3==0 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(-100,180);	//CCW  CW//hard left
  } 
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==0 && S6==1 && S7==1)
  {
    bot(180,-100);	 //CW  CCW//hard right
  }
  /////////////////////////////////////////////////////////////
   else if(S1==1 && S2==0 && S3==0 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(-150,180);	//CCW  CW//hard left
  } 
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==0 && S6==0 && S7==1)
  {
    bot(180,-150);	 //CW  CCW//hard right
  }
}// end of normal_line function
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
void normal_line_bridge()
{
   //////////////////////////////////////////////////////////////
   read_sensor();
   ////////////////////////////////////////////////////////////// 
  YELLOW_HI;
//  BUZ_HI;
  /////////////////////////////////////////////////////////////////////
  if(S1==0 && S2==0 && S3==1 && S4==1 && S5==0 && S6==0 && S7==0) 
  {
      bot(100,180);	//CW   CW//lefT	
  }
  else if(S1==0 && S2==0 && S3==0 && S4==1 && S5==1 && S6==0 && S7==0) 
  {
    bot(180,100);	//CW   CW//right
  }
  
 ////////////////////////////////////////////////////////////////////// 
  else if(S1==0 && S2==0 && S3==1 && S4==0 && S5==0 && S6==0 && S7==0)
  {
      bot(40,180);	//CW   CW//lefT
		
  }
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==1 && S6==0 && S7==0)
  {
    bot(180,40);	//CW   CW//right
  }
  
  /////////////////////////////////////////////////////////////////
  else if(S1==0 && S2==1 && S3==1 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(0,180);	//CCW  CW//hard left
  }
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==1 && S6==1 && S7==0) 
  {
    bot(180,0);	 //CW  CCW//hard right
  } 
  /////////////////////////////////////////////////////
  else if(S1==0 && S2==1 && S3==0 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(-60,180);	//CCW  CW//hard left
  } 
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==0 && S6==1 && S7==0)
  {
    bot(180,-60);	 //CW  CCW//hard right
  }
  /////////////////////////////////////////////////////////////
  else if(S1==1 && S2==1 && S3==0 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(-100,180);	//CCW  CW//hard left
  } 
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==0 && S6==1 && S7==1)
  {
    bot(180,-100);	 //CW  CCW//hard right
  }
  /////////////////////////////////////////////////////////////
   else if(S1==1 && S2==0 && S3==0 && S4==0 && S5==0 && S6==0 && S7==0)
  {
    bot(-150,180);	//CCW  CW//hard left
  } 
  else if(S1==0 && S2==0 && S3==0 && S4==0 && S5==0 && S6==0 && S7==1)
  {
    bot(180,-150);	 //CW  CCW//hard right
  }
}// end of nolmal_line_bridge
//////////////////////////////////////////////////////////////////////////////
// not changeable function
//////////////////////////////////////////////////////////////////////////////
void bot(int left, int right)// left motor value// right motor value
{
  if(left==0)
  {
    left_motor(0,left);
  }
  else if(left>0)
  {
    left_motor(1,left);
  }
  else
  {
    left_motor(2,-left);
  }
  /////////////////////////////////////
  if(right==0)
  {
    right_motor(0,0);
  }
  else if(right>0)
  {
    right_motor(1,right);
  }
  else
  {
    right_motor(2,-right);
  }
  
}
//////////////////////////////////////////////////////////////////
void left_motor(int dir, int spd)// sub function for left motor operation
{
  if(dir==1)// for forward
  {
    digitalWrite(n1,HIGH);
    digitalWrite(n2,LOW);
  }
  else if(dir==2)// for reverse
  {
    digitalWrite(n2,HIGH);
    digitalWrite(n1,LOW);
  }
  else// FOR STOP
  {
    digitalWrite(n2,LOW);
    digitalWrite(n1,LOW);
  }
  analogWrite(e1,spd);
}

void right_motor(int dir, int spd)// function for right motor operation
{
  if(dir==1)//for forward
  {
    digitalWrite(n3,HIGH);
    digitalWrite(n4,LOW);
  }
  else if(dir==2)// for reverse
  {
    digitalWrite(n4,HIGH);
    digitalWrite(n3,LOW);
  }
  else
  {
    digitalWrite(n3,LOW);
    digitalWrite(n4,LOW);
  }
  analogWrite(e2,spd);
}
///////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////

void read_sensor()
{
  if(line_color==WHITE)
  {
      if(A==HIGH)
      S1=0;
      else
      S1=1;
      if(B==HIGH)
      S2=0;
      else
      S2=1;
      if(C==HIGH)
      S3=0;
      else
      S3=1;
      if(D==HIGH)
      S4=0;
      else
      S4=1;
      if(E==HIGH)
      S5=0;
      else
      S5=1;
      if(F==HIGH)
      S6=0;
      else
      S6=1;
      if(G==HIGH)
      S7=0;
      else
      S7=1; 
  }
  else
  {
    if(A==LOW)
      S1=0;
      else
      S1=1;
      if(B==LOW)
      S2=0;
      else
      S2=1;
      if(C==LOW)
      S3=0;
      else
      S3=1;
      if(D==LOW)
      S4=0;
      else
      S4=1;
      if(E==LOW)
      S5=0;
      else
      S5=1;
      if(F==LOW)
      S6=0;
      else
      S6=1;
      if(G==LOW)
      S7=0;
      else
      S7=1; 
  }
}



////////////////////////////////////////////////
///function for left sonar
///////////////////////////////
float left_sonar_read()
{
  digitalWrite(trigpin_lft, LOW);
  delayMicroseconds(5);
  digitalWrite(trigpin_lft, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigpin_lft, LOW);
  duration_lft = pulseIn(echopin_lft, HIGH,1800);
  cm_lft = (duration_lft/2) / 29.1;
  return cm_lft;
}
////////////////////////////////////////
///function for right sonar
////////////////////////////////////////
float right_sonar_read()
{
  digitalWrite(trigpin_rght, LOW);
  delayMicroseconds(5);
  digitalWrite(trigpin_rght, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigpin_rght, LOW);
  duration_rght = pulseIn(echopin_rght, HIGH,1800);
  cm_rght = (duration_rght/2) / 29.1;
  return cm_rght;
}
////////////////////////////////////////////////
/////////////////////////////////////////////////
float forward_sonar_read()
{
  digitalWrite(trigpin_frd, LOW);
  delayMicroseconds(5);
  digitalWrite(trigpin_frd, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigpin_frd, LOW);
  duration_frd = pulseIn(echopin_frd, HIGH,1800);
  cm_frd = (duration_frd/2) / 29.1;
  return cm_frd;
}



